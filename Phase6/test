#!/bin/sh

espressoV='Espresso++'
badTests=$(ls -R -p Tests/$espressoV/BadTests | grep -v /)
goodTests=$(ls -R -p Tests/$espressoV/GoodTests | grep -v /)

clear

# Test all scripts
if [ $# -eq 0 ]; then
    fails=0
    ant espressoc

    rm *.*j

    # Perform Good Tests
    echo "=============== TESTING GOOD TESTS ==============="
    for file in $goodTests; do

        check1=false
        check2=true

        ./espressoc Tests/$espressoV/GoodTests/$file > test.txt
        ./espressocr Tests/$espressoV/GoodTests/$file > example.txt
        search=".rj"
        replace=".j"
        sed -i "s|$search|$replace|g" example.txt

        if [ "$(cat test.txt)" = "$(cat example.txt)" ]; then
            check1=true
        fi

        files=$(basename --suffix=.j -- *.j)
        for f in $files; do
            diff $f.j $f.rj && check2=true || check2=false
            if [ "$check2" = false ]; then
                echo $f " failed"
                break
            fi
        done

        if [ "$check1" = true ] && [ "$check2" = true ]; then
            echo -e "Test file: $file \e[34mSUCCESS\e[0m"
        else
            echo -e "Test file: $file \e[31mERROR\e[0m"
            ((fails++))
        fi

        rm *.*j

    done
    echo "Espresso failed $fails times"

    for n in {1..5}; do echo ""; done
    fails=0

    # Perform Bad Tests
    echo "=============== TESTING BAD TESTS ==============="
    for file in $badTests; do

        check1=false
        check2=true

        ./espressoc Tests/$espressoV/BadTests/$file > test.txt
        search="Tests/.\+/BadTests/.\+: "
        replace="Error: "
        sed -i "s|$search|$replace|g" test.txt
        
        ./espressocr Tests/$espressoV/BadTests/$file > example.txt
        search=".\+:.\+:.\+:.\+:"
        replace="Error:"
        sed -i "s|$search|$replace|g" example.txt

        if [ "$(cat test.txt)" = "$(cat example.txt)" ]; then
            check1=true
        fi

        files=$(basename --suffix=.j -- *.j)
        for f in $files; do
            diff $f.j $f.rj && check2=true || check2=false
            if [ "$check2" = false ]; then
                echo $f " failed"
                break
            fi
        done

        if [ "$check1" = true ] && [ "$check2" = true ]; then
            echo -e "Test file: $file \e[34mSUCCESS\e[0m"
        else
            echo -e "Test file: $file \e[31mERROR\e[0m"
            ((fails++))
        fi

        rm test.txt example.txt
        rm *.*j
    done
    echo "Espresso failed $fails times"

    for n in {1..5}; do echo ""; done

# Test specific script
elif [ $# -eq 1 ]; then
    ant espressoc
    for file in $goodTests; do
        if [[ $file == *$1* ]]; then
            echo "Testing file: $file                                                       Correct Output"
            ./espressoc Tests/$espressoV/GoodTests/$file > test.txt
            ./espressocr Tests/$espressoV/GoodTests/$file > example.txt
            search=".rj"
            replace=".j"
            sed -i "s|$search|$replace|g" example.txt
            diff -y  --width=150 test.txt example.txt

            output=`cat test.txt`
            result=`cat example.txt`
            if [ "$output" == "$result" ]; then
                echo -e "Test file: $file \e[34mSUCCESS\e[0m"
            else
                echo -e "Test file: $file \e[31mERROR\e[0m"
                ((fails++))
            fi

            # check .j files
            allGood=true

            files=$(basename --suffix=.j -- *.j)
            for f in $files; do
                diff $f.j $f.rj && allGood=true || allGood=false
                if [ $allGood = "false" ]; then
                    echo $f " failed"
                    break
                fi
            done

            if [ "$allGood" = true ]; then
                echo -e "J file(s): \e[34mSUCCESS\e[0m"
            else
                echo -e "J file(s): \e[31mERROR\e[0m"
            fi

        fi
    done
    for file in $badTests; do
        if [[ $file == *$1* ]]; then
            echo "Testing file: $file                                                       Correct Output"
            ./espressoc Tests/$espressoV/BadTests/$file > test.txt
            search="Tests/.\+/BadTests/.\+: "
            replace="Error: "
            sed -i "s|$search|$replace|g" test.txt
            ./espressocr Tests/$espressoV/BadTests/$file > example.txt
            search=".\+:.\+:.\+:.\+:"
            replace="Error:"
            sed -i "s|$search|$replace|g" example.txt
            diff -y --width=100 test.txt example.txt

            output=`cat test.txt`
            result=`cat example.txt`
            if [ "$output" == "$result" ]; then
                echo -e "Test file: $file \e[34mSUCCESS\e[0m"
            else
                echo -e "Test file: $file \e[31mERROR\e[0m"
                ((fails++))
            fi

            # check .j files
            allGood=true

            files=$(basename --suffix=.j -- *.j)
            for f in $files; do
                diff $f.j $f.rj && allGood=true || allGood=false
                if [ $allGood = "false" ]; then
                    echo $f " failed"
                    break
                fi
            done

            if [ "$allGood" = true ]; then
                echo -e "J file(s): \e[34mSUCCESS\e[0m"
            else
                echo -e "J file(s): \e[31mERROR\e[0m"
            fi
        fi
    done

    

    # rm test.txt example.txt
fi